# $^ is substituted with all of the target's dependancy files
# $< is the first dependancy
# $@ is the target file

BIN_NAME ?= os.bin
ISO_NAME ?= os.iso
ARCH ?= x86
PROJDIRS = kernel drivers/$(ARCH) boot/$(ARCH) 
LINKER_SCRIPT = linker.ld
INCDIR := include

### 
### C SOURCE FILES
###

C_SRCFILES := $(shell find $(PROJDIRS) -type f -name "*.c")
C_OBJFILES := $(patsubst %.c,%.o,$(C_SRCFILES))
C_DEPFILES := $(patsubst %.c,%.d,$(C_SRCFILES))

###
### ASM SOURCE FILES
###

ASM_SRCFILES := $(shell find $(PROJDIRS) -type f -name "*.s")
ASM_OBJFILES := $(patsubst %.s,%.o,$(ASM_SRCFILES))

###
### BUILD FLAGS
###

WARNINGS := -Wall -Wextra -pedantic -Wshadow -Wpointer-arith -Wcast-align \
            -Wwrite-strings -Wmissing-prototypes -Wmissing-declarations \
            -Wredundant-decls -Wnested-externs -Winline -Wno-long-long \
            -Wconversion -Wstrict-prototypes

CFLAGS := -g -std=gnu99 -ffreestanding $(WARNINGS) -I $(INCDIR) # -O2
LDFLAGS := -T $(LINKER_SCRIPT) -ffreestanding -nostdlib -lgcc # - O2
CC := i386-elf-gcc
AS := i386-elf-as

###
### BUILD RULES
###

.PHONY: all clean run

all: $(ISO_NAME)

$(ISO_NAME): $(BIN_NAME)
	mkdir -p sysroot/boot
	cp $< sysroot/boot/
	grub-mkrescue -o $@ sysroot
	
$(BIN_NAME): $(ASM_OBJFILES) $(C_OBJFILES)
	$(CC) $(LDFLAGS) -o $@ $^

%.o: %.s
	$(AS) $< -o $@

%.o : %.c Makefile
	$(CC) $(CFLAGS) -MMD -MP -c $< -o $@

run: os.iso
	qemu-system-i386 -cdrom $<

clean:
	rm -rf *.bin *.o *.iso
	rm -rf sysroot/boot/*.bin
	rm -rf $(wildcard $(C_OBJFILES) $(C_DEPFILES) $(ASM_OBJFILES))

# include depfiles generated by gcc
-include $(C_DEPFILES) 


